<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>HW3</title>
    <style type="text/css">
    #input {
        width: 200px;
        height: 40px;
        margin-bottom: 20px;
        padding: 5px;
    }

    .result,
    .result-undo {
        padding: 15px;
    }

    .result-undo {
        color: red;
    }
    </style>
</head>

<body>
    <input type="text" id="input">
    <pre class="result">
    </pre>
    <pre class="result-undo">
    </pre>
    <div class="status">
    </div>
    <button id="undo">Undo</button>
    <button id="redo">Redo</button>
    <div class="output">Need to request for permission first</div>
    <button id=request>Request !</button>
    <script type="text/javascript" src="jquery-3.6.0.min.js"></script>
    <script type="text/javascript">
    (function($) {
        $(document).ready(function() {
            var flag = true;
            if (location.protocol != "https:") {
                location.href = "https:" + window.location.href.substring(window.location.protocol.length);
            }
            let data = [];
            let undoData = [];
            $('#input').val('');

            function handleOrientation(event) {
                $('.output').textContent = `Permission Granted. \n`;
                var x = event.beta; // In degree in the range [-180,180)
                //var y = event.gamma; // In degree in the range [-90,90)
                $('.output').text(x);
                if (x.ceil == 15 && flag) {// check current time and don't let in until sometime like 300 ms // check for exact value
                    //throttle(undo, 300);
                    flag = false;
                    undo();
                } else if (x.ceil == 80 && flag) {
                    //throttle(undo, 300);
                    flag = false;
                    redo();
                } else if (x.ceil < 80 || x > 15) {
                    flag = true;
                }
            }

            function undo() {
                if (data.length > 0) {
                    var pop = data.pop().trim();
                    undoData.push(pop);
                    $('.result').text(data);
                    $('.result-undo').text(undoData);
                    var result = '';
                    $.each(data, function(index, value) {
                        result += value;
                    });
                    $('#input').val(result);
                } else {
                    $('.result').text('Nohing to undo');
                }
            }

            function redo() {
                if (undoData.length > 0) {
                    var pop = undoData.pop().trim();
                    data.push(pop);
                    $('.result').text(data);
                    $('.result-undo').text(undoData);
                    var result = '';
                    $.each(data, function(index, value) {
                        result += value;
                    });
                    $('#input').val(result);
                } else {
                    $('.result-undo').text('Nohing to redo');
                }
            }

            function throttle(fn, wait) {
                var time = Date.now();
                return function() {
                    if ((time + wait - Date.now()) < 0) {
                        fn();
                        time = Date.now();
                    }
                }
            }

            $(document).on('input', '#input', function(e) {
                var str = $(this).val().trim();
                data.push(str.charAt(str.length - 1));
                $('.result').text(data);
                $('.result-undo').text(undoData);
            });
            $(document).on('click', '#undo', undo);
            $(document).on('click', '#redo', redo);
            $(document).on('click', '#request', function() {
                if (typeof(DeviceMotionEvent) !== "undefined" && typeof(DeviceMotionEvent.requestPermission) === "function") {
                    // (optional) Do something before API request prompt.
                    DeviceMotionEvent.requestPermission()
                        .then(response => {
                            // (optional) Do something after API prompt dismissed.
                            if (response == "granted") {
                                window.addEventListener("deviceorientation", handleOrientation);
                                $('#request').remove();
                            }
                        })
                        .catch(console.error);
                } else {
                    alert("DeviceMotionEvent is undefined.");
                }
            });
        });

    })(window.jQuery);
    </script>
</body>

</html>