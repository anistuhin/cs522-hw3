<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>HW3</title>
    <style type="text/css">
    @font-face {
        font-family: 'Europa-Regular';
        src: url('assets/fonts/Europa-Regular.eot');
        src: url('assets/fonts/Europa-Regular.eot?#iefix') format('embedded-opentype'),
            url('assets/fonts/Europa-Regular.woff2') format('woff2'),
            url('assets/fonts/Europa-Regular.woff') format('woff'),
            url('assets/fonts/Europa-Regular.ttf') format('truetype'),
            url('assets/fonts/Europa-Regular.svg#Europa-Regular') format('svg');
        font-weight: normal;
        font-style: normal;
        font-stretch: normal;
    }

    @font-face {
        font-family: 'Avenir-Black';
        src: url('assets/fonts/Avenir-Black.eot');
        src: url('assets/fonts/Avenir-Black.eot?#iefix') format('embedded-opentype'),
            url('assets/fonts/Avenir-Black.woff2') format('woff2'),
            url('assets/fonts/Avenir-Black.woff') format('woff'),
            url('assets/fonts/Avenir-Black.ttf') format('truetype'),
            url('assets/fonts/Avenir-Black.svg#Avenir-Black') format('svg');
        font-weight: 900;
        font-style: normal;
        font-stretch: normal;
    }

    * {
        margin: 0;
        padding: 0;
        border: 0;
        outline: 0;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
    }

    html {
        line-height: 1.15;
        -webkit-text-size-adjust: 100%;
    }

    body {
        color: #565656;
        font-family: "Europa-Regular";
        font-weight: normal;
        font-style: normal;
        font-stretch: normal;
        letter-spacing: normal;
        word-wrap: break-word;
        text-rendering: optimizeLegibility;
        text-align: center;
        padding-top: calc((100vh - 350px) / 2);
    }

    h2 {
        color: #15172c;
        font-family: "Avenir-Black";
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        width: calc(100% - 20px);
        max-width: 320px;
        display: block;
        margin: 20px auto;
    }

    #input {
        color: #565656;
        font-size: 17px;
        line-height: 25px;
        height: 50px;
        border: solid 1px #dbdbdb;
        background-color: #ffffff;
        padding: 12px 17px 13px;
        border-radius: 3px !important;
        width: calc(100% - 20px);
        max-width: 320px;
        display: block;
        margin: 20px auto;
    }

    #input:focus {
        border-color: #15172c;
    }

    #input::-webkit-input-placeholder {
        opacity: .7;
    }

    #input::-moz-placeholder {
        opacity: .7;
    }

    #input::-ms-input-placeholder {
        opacity: .7;
    }

    #input::placeholder {
        opacity: .7;
    }

    .result,
    .result-undo {
        padding: 15px;
    }

    .result-undo,
    .status {
        color: red;
    }

    button {
        color: #ffffff;
        height: 50px;
        font-size: 18px;
        line-height: 50px;
        letter-spacing: -0.09px;
        text-align: center;
        background-color: #15172c;
        border-radius: 3px;
        padding-right: 15px;
        padding-left: 15px;
        margin-top: 25px;
    }

    .none {
        display: none;
    }

    footer {
        position: fixed;
        width: 100%;
        bottom: 0;
        left: 0;
        padding-top: calc((100vh - 320px) / 2);
        background: rgba(255, 255, 255, 1);
        height: 100vh;
    }

    .footer-one {
        z-index: 9;
    }

    .footer-two {
        z-index: 8;
    }

    .output span {
        color: green;
    }
    </style>
</head>

<body>
    <h2>Simple undo/redo based on device motion</h2>
    <input type="text" id="input">
    <pre class="result none">
    </pre>
    <pre class="result-undo none">
    </pre>
    <div class="status">
    </div>
    <button id="undo" class="none">Undo</button>
    <button id="redo" class="none">Redo</button>
    <footer class="footer-one">
        <h2 class="output" style="margin-bottom: 0;">Please, request for Device Motion permission to start</h2>
        <button id="request">Request Access</button>
    </footer>
    <footer class="footer-two">
        <h2 class="output" style="margin-bottom: 0;">Your default phone holding angle range is around: <span>0<span> (+/-15) degrees</h2>
        <button id="record-angle">Record Angle</button>
    </footer>
    <script type="text/javascript" src="jquery-3.6.0.min.js"></script>
    <script type="text/javascript">
    (function($) {
        $(document).ready(function() {
            var flag = false;
            let data = [];
            let undoData = [];
            let angle = 0;
            let x = 0;
            $('#input').val('');
            // if (location.protocol != "https:") {
            //     location.href = "https:" + window.location.href.substring(window.location.protocol.length);
            // }
            function handleOrientation(event) {
                x = event.beta;
                $('.footer-two > .output > span:not(.recorded)').text(Math.ceil(x));
                if (Math.ceil(x) == (angle - 16) && flag) {
                    undo();
                    flag = false;
                } else if (Math.ceil(x) == (angle + 16) && flag) {
                    redo();
                    flag = false;
                } else if (Math.ceil(x) < (angle + 16) || Math.ceil(x) > (angle - 16)) {
                    flag = true;
                }
            }

            function undo() {
                if (data.length > 0) {
                    flag = false;
                    var pop = data.pop().trim();
                    undoData.push(pop);
                    $('.result').text(data);
                    $('.result-undo').text(undoData);
                    var result = '';
                    $.each(data, function(index, value) {
                        result += value;
                    });
                    $('#input').val(result);
                    $('.status').text('');
                } else {
                    $('.status').text('Nohing to undo');
                }
            }

            function redo() {
                if (undoData.length > 0) {
                    flag = false;
                    var pop = undoData.pop().trim();
                    data.push(pop);
                    $('.result').text(data);
                    $('.result-undo').text(undoData);
                    var result = '';
                    $.each(data, function(index, value) {
                        result += value;
                    });
                    $('#input').val(result);
                    $('.status').text('');
                } else {
                    $('.status').text('Nohing to redo');
                }
            }

            $(document).on('input', '#input', function(e) {
                var str = $(this).val().trim();
                data.push(str.charAt(str.length - 1));
                $('.result').text(data);
                $('.result-undo').text(undoData);
            });
            $(document).on('click', '#undo', undo);
            $(document).on('click', '#redo', redo);
            $(document).on('click', '#record-angle', function() {
                angle = Math.ceil(x);
                flag = true;
                $('.footer-two > .output > span:not(.recorded)').addClass('recorded');
                $('.footer-two > .output > span.recorded').text(angle);
                $('#record-angle').remove();
                setTimeout(function() {
                    $('.footer-two').addClass('none');
                }, 500);
            });
            $(document).on('click', '#request', function() {
                if (typeof(DeviceMotionEvent) !== "undefined" && typeof(DeviceMotionEvent.requestPermission) === "function") {
                    // (optional) Do something before API request prompt.
                    DeviceMotionEvent.requestPermission()
                        .then(response => {
                            // (optional) Do something after API prompt dismissed.
                            if (response == "granted") {
                                window.addEventListener("deviceorientation", handleOrientation);
                                $('.footer-one').addClass('none');
                            }
                        })
                        .catch(console.error);
                } else {
                    alert("DeviceMotionEvent is undefined.");
                }
            });
        });

    })(window.jQuery);
    </script>
</body>

</html>